@app.route('/login', methods = ['GET', 'POST'])
def login():
    if flask.request.method == 'GET':
        return '''
                   <form action='login' method='POST'>
                    <input type='text' name='user' id='user' placeholder='usuario'/>
                    <input type='password' name='password' id='password' placeholder='password'/>
                    <input type='submit' name='submit'/>
                   </form>
                   '''

    usuario = flask.request.form['user']
    users = getFromDB('users')['name']['contrasena']
    if usuario in users and hashlib.new('md5', flask.request.form['password']) == users[usuario]['contrasena']:
        user = User()
        user.id = usuario
        flask_login.login_user(user)
        return flask.redirect(flask.url_for('protected'))

    return 'Bad login'

@app.route('/protected')
@flask_login.login_required
def protected():
    return 'Logged in as: ' + flask_login.current_user.id

@app.route('/logout')
def logout():
    flask_login.logout_user()
    return 'Logged out'

class User(flask_login.UserMixin):
    pass


@login_manager.user_loader
def user_loader(name):
    if name not in getFromDB('users')['name']:
        return

    user = User()
    user.id = name
    return user


@login_manager.request_loader
def request_loader(request):
    usuario = request.form.get('name')
    if usuario not in getFromDB('users')['name']:
        return

    user = User()
    user.id = usuario
    return user



@app.route('/login/', methods=['GET', 'POST'])
def login():
    loguedSession = request.cookies.get('logued')
    global logued
    if not loguedSession:
        if flask.request.method == 'GET':
            return '''
                        <form action='' method='POST'>
                        <input type='text' name='name' id='name' placeholder='usuario'/>
                        <input type='password' name='password' id='password' placeholder='password'/>
                        <input type='submit' name='submit'/>
                       </form>
            '''
        elif flask.request.method == 'POST':
            name = flask.request.form['name']
            password = flask.request.form['password']
            print(password)
            dfUsers = (getFromDB('users'))
            password = hashlib.new('md5', password.encode())
            print(password.hexdigest())
            print(list(dfUsers[dfUsers['name'] == name]['contrasena'])[0])
            # print(list(dfUsers[dfUsers['name'] == name]['contrasena'])[0] + " == " + password.hexdigest())
            if list(dfUsers[dfUsers['name'] == name]['contrasena'])[0] == password.hexdigest():
                logued[name] = True
                print('logueado')
                response = make_response(url_for('index'))
                response.set_cookie("logued", name)
                return response
            else:
                return '''
                contraseña incorrecta
                       <form action='' method='POST'>
                        <input type='text' name='name' id='name' placeholder='usuario'/>
                        <input type='password' name='password' id='password' placeholder='password'/>
                        <input type='submit' name='submit'/>
                       </form>
                       '''
    else:
        return redirect(url_for('index'))


@app.route('/logout/', methods=['GET', 'POST'])
def logout():
    loguedSession = request.cookies.get('logued')
    global logued
    if logued[loguedSession]:
        if flask.request.method == 'GET':
            return '''
                           <form action='' method='POST'>
                            ¿Quieres desloguearte?
                            <input type='submit' name='submit'/>
                           </form>
                           '''
        elif flask.request.method == 'POST':
            logued[loguedSession] = False
            response = make_response(redirect(url_for('login')))
            response.set_cookie("logued", False)
            return response
    else:
        return redirect(url_for('login'))

